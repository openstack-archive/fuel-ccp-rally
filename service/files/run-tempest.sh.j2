#!/bin/bash

set -ex

function publish_artifacts {
    cp /var/lib/rally/tempest.log "${path}/tempest.log"
    rally verify report --type html --to "${path}/result.html"
    rally verify report --type junit-xml --to "${path}/result.xml"

    scp -o StrictHostKeyChecking=no -r -i /var/lib/rally/static.pem -p{{ rally.tempest.static.port }} "${path}" {{ rally.tempest.static.username }}@{{ rally.tempest.static.host }}:{{ rally.tempest.static.server_path }}/{{ rally.tempest.static.path }}
    echo "Artifacts are located in {{ rally.tempest.static.site }}/{{ rally.tempest.static.path }}"
}

# OS credentials
export OS_AUTH_URL={{ address("keystone", keystone.admin_port, with_scheme=True) }}
export OS_IDENTITY_API_VERSION=3
export OS_PASSWORD={{ openstack.user_password }}
export OS_PROJECT_DOMAIN_NAME=default
export OS_PROJECT_NAME={{ openstack.project_name }}
export OS_USERNAME={{ openstack.user_name }}
export OS_USER_DOMAIN_NAME=default

rally-manage db create
rally deployment create --fromenv --name=to-be-verified-by-tempest
rally verify create-verifier --type tempest --name tempest-verifier --source /var/lib/rally/tempest
rally verify configure-verifier --extend /var/lib/rally/tempest.conf --show

os_release="{{ rally.tempest.openstack_release }}"

rally verify start --skip-list "/var/lib/rally/${os_release}-skip-list.list" --detailed

path="/var/lib/rally/{{ rally.tempest.static.path }}"
mkdir -p "${path}"

rally verify report --type json --to "${path}/result.json"

{% if rally.tempest.static.publish %}
publish_artifacts
{% endif %}

/var/lib/rally/check_status.py "${path}/result.json"
